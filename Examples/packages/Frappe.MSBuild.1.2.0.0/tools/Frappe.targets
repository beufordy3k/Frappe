<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="CreateBundles" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Frappe.Tasks.GetFilesFromBundle" AssemblyFile="$(MSBuildThisFileDirectory)Frappe.MSBuild.dll" />
  <UsingTask TaskName="Frappe.Tasks.BundleFiles" AssemblyFile="$(MSBuildThisFileDirectory)Frappe.MSBuild.dll" />
  <UsingTask TaskName="Frappe.Tasks.CopyMostRecentCreationAndLastWriteTimeToFiles" AssemblyFile="$(MSBuildThisFileDirectory)Frappe.MSBuild.dll" />
  <UsingTask TaskName="AjaxMin" AssemblyFile="$(MSBuildThisFileDirectory)AjaxMin\AjaxMinTask.dll" />
  <PropertyGroup>
    <FrappeDebug>false</FrappeDebug>
  </PropertyGroup>
  <Target Name="CompileBundles" AfterTargets="AfterBuild">
    <ItemGroup>
      <SourceBundleFiles Include="$(MSBuildProjectDirectory)\App_Bundles\**\*.bundle" />
      <BundleFiles Include="%(SourceBundleFiles.Identity)">
        <OutputFile>$([System.Text.RegularExpressions.Regex]::Replace(%(Identity),'(.+?)(\.js|\.css)\.bundle$','$1.min$2', System.Text.RegularExpressions.RegexOptions.IgnoreCase))</OutputFile>
      </BundleFiles>
    </ItemGroup>
    <Message Text="Ensuring bundle &quot;%(BundleFiles.Identity)&quot; is up-to-date." />
    <MSBuild Condition="Exists('%(BundleFiles.Identity)')" Projects="$(MSBuildProjectFullPath)" Targets="CompileBundle" Properties="BundleFile=%(BundleFiles.Identity);OutputFile=%(BundleFiles.OutputFile)" />
  </Target>
  <Target Name="TransformBundle" Inputs="@(ImportFiles);@(CssFiles);@(JavaScriptFiles);$(BundleFile)" Outputs="$(OutputFile)" DependsOnTargets="ReadBundle;TransformCssIncludeFiles;TransformJavaScriptIncludeFiles">
    <Message Condition="'$(FrappeDebug)'=='true'" Text="CssFiles: %(CssFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(CssFiles.OutputFile)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="JavaScriptFiles: %(JavaScriptFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(JavaScriptFiles.OutputFile)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="BundleFile: $(BundleFile)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: $(OutputFile)" />
    <ItemGroup>
      <BundleContentFiles Include="%(CssFiles.OutputFile)" />
      <BundleContentFiles Include="%(JavaScriptFiles.OutputFile)" />
    </ItemGroup>
  </Target>
  <Target Name="CompileBundle" Inputs="@(ImportFiles);@(BundleContentFiles);$(BundleFile)" Outputs="$(OutputFile)" DependsOnTargets="TransformBundle">
    <Frappe.Tasks.BundleFiles File="$(OutputFile)" Overwrite="true" Inputs="@(BundleContentFiles)" />
    <Frappe.Tasks.CopyMostRecentCreationAndLastWriteTimeToFiles FromFiles="@(BundleContentFiles);$(BundleFile)" ToFiles="$(OutputFile)" />
  </Target>
  <Target Name="ReadBundle">
    <Message Condition="'$(FrappeDebug)'=='true'" Text="Loading bundle includes from &quot;$(BundleFile)&quot;." />
    <Frappe.Tasks.GetFilesFromBundle BundleFile="$(BundleFile)">
      <Output TaskParameter="Files" ItemName="IncludeFiles" />
      <Output TaskParameter="ImportFiles" ItemName="ImportFiles" />
    </Frappe.Tasks.GetFilesFromBundle>
    <ItemGroup>
      <CssFiles Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(IncludeFiles.Identity),'.+\.css$', System.Text.RegularExpressions.RegexOptions.IgnoreCase))" Include="%(IncludeFiles.Identity)">
        <FileType>css</FileType>
        <CssInputFile>%(Identity)</CssInputFile>
        <OutputFile>$([System.Text.RegularExpressions.Regex]::Replace(%(Identity),'(.+?)(?:\.min)?\.(css|less)$','$1.min.css', System.Text.RegularExpressions.RegexOptions.IgnoreCase))</OutputFile>
      </CssFiles>
      <CssFiles Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(IncludeFiles.Identity),'.+\.less$', System.Text.RegularExpressions.RegexOptions.IgnoreCase))" Include="%(IncludeFiles.Identity)">
        <FileType>less</FileType>
        <CssInputFile>%(Identity).css</CssInputFile>
        <OutputFile>%(Identity).min.css</OutputFile>
      </CssFiles>
      <JavaScriptFiles Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(IncludeFiles.Identity),'.+\.js$', System.Text.RegularExpressions.RegexOptions.IgnoreCase))" Include="%(IncludeFiles.Identity)">
        <OutputFile>$([System.Text.RegularExpressions.Regex]::Replace(%(Identity),'(.+?)(?:\.min)?\.js$','$1.min.js', System.Text.RegularExpressions.RegexOptions.IgnoreCase))</OutputFile>
      </JavaScriptFiles>
    </ItemGroup>
    <Message Condition="'$(FrappeDebug)'=='true'" Text="CssFiles: %(CssFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(CssFiles.OutputFile)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="JavaScriptFiles: %(JavaScriptFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="ImportFiles: %(ImportFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(JavaScriptFiles.OutputFile)" />
  </Target>
  <Target Name="TransformCssIncludeFiles" Inputs="%(CssFiles.Identity)" Outputs="%(CssFiles.OutputFile)">
    <Message Condition="'$(FrappeDebug)'=='true'" Text="Minify css!" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="CssFiles: %(CssFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(CssFiles.OutputFile)" />
    <Exec Condition="'%(CssFiles.FileType)' == 'less'" Command="&quot;$(MSBuildThisFileDirectory)dotLess\dotless.compiler.exe&quot; &quot;%(CssFiles.Identity)&quot; &quot;%(CssFiles.CssInputFile)&quot;" />
    <Frappe.Tasks.CopyMostRecentCreationAndLastWriteTimeToFiles Condition="'%(CssFiles.FileType)' == 'less'" FromFiles="%(CssFiles.Identity)" ToFiles="%(CssFiles.CssInputFile)" />
    <AjaxMin CssSourceFiles="%(CssFiles.CssInputFile)" CssSourceExtensionPattern="\.css$" CssTargetExtension=".min.css" />
    <Frappe.Tasks.CopyMostRecentCreationAndLastWriteTimeToFiles FromFiles="%(CssFiles.CssInputFile)" ToFiles="%(CssFiles.OutputFile)" />
  </Target>
  <Target Name="TransformJavaScriptIncludeFiles" Inputs="%(JavaScriptFiles.Identity)" Outputs="%(JavaScriptFiles.OutputFile)">
    <Message Condition="'$(FrappeDebug)'=='true'" Text="Minify js!" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="JavaScriptFiles: %(JavaScriptFiles.Identity)" />
    <Message Condition="'$(FrappeDebug)'=='true'" Text="OutputFile: %(JavaScriptFiles.OutputFile)" />
    <AjaxMin JsSourceFiles="%(JavaScriptFiles.Identity)" JsSourceExtensionPattern="\.js$" JsTargetExtension=".min.js" />
    <Frappe.Tasks.CopyMostRecentCreationAndLastWriteTimeToFiles FromFiles="%(JavaScriptFiles.Identity)" ToFiles="%(JavaScriptFiles.OutputFile)" />
  </Target>
</Project>